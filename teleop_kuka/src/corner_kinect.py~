#import the necessary modules
import freenect
import cv2
import numpy as np

objp = np.zeros((1*1,3), np.float32)
objp[:,:2] = np.mgrid[0:7,0:6].T.reshape(-1,2)

axis = np.float32([[3,0,0], [0,3,0], [0,0,-3]]).reshape(-1,3)

mtx = np.matrix([[532.80990766, 0.0, 342.49522241],
      [0.0, 532.93344824, 233.88792572],
      [0.0, 0.0, 1.0]], np.float32)

dist =  np.array([ -2.81325825e-01,   2.91151879e-02,   1.21234424e-03,  -1.40823842e-04, 1.54861064e-01], np.float32)

 
#function to get RGB image from kinect
def get_video():
    array,_ = freenect.sync_get_video()
    array = cv2.cvtColor(array,cv2.COLOR_RGB2BGR)
    return array
 
#function to get depth image from kinect
def get_depth():
    array,_ = freenect.sync_get_depth()
    array = array.astype(np.uint8)
    return array

def draw(img, corners, imgpts):
    corner = tuple(corners[0].ravel())
    img = cv2.line(img, corner, tuple(imgpts[0].ravel()), (255,0,0), 10)
    img = cv2.line(img, corner, tuple(imgpts[1].ravel()), (0,255,0), 10)
    img = cv2.line(img, corner, tuple(imgpts[2].ravel()), (0,0,255), 10)
    return img 


if __name__ == "__main__":
    while 1:
        #get a frame from RGB camera
        frame = get_video()
        #get a frame from depth sensor
        depth = get_depth()


	img = frame
	gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
	blur = cv2.GaussianBlur(gray,(5,5),0)
	edges = cv2.Canny(blur,100,200)
	ret,thresh = cv2.threshold(edges,127,255,0)
	contours, hierarchy = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_NONE)
	cnt = contours[1]
	epsilon = 0.1 * cv2.arcLength(cnt, True)
	approx = cv2.approxPolyDP(cnt, epsilon, True)


	imgp = np.array(cnt, np.float32)
	#print(imgp)
	rvecs, tvecs, inliers = cv2.solvePnPRansac(objp, imgp, mtx, dist)
	#print(rvecs,tvecs)
	imgpts, jac = cv2.projectPoints(axis, rvecs, tvecs, mtx, dist)


    	img2 = draw(img, imgp, imgpts)
	
	cv2.imshow('img',img)



	cv2.drawContours(img, approx, -1, (0,255,0), 10)
	cv2.imshow('square', img)





	#display RGB image
        #cv2.imshow('RGB image',frame)
        #display depth image
        #cv2.imshow('Depth image',depth)
 
        # quit program when 'esc' key is pressed
        k = cv2.waitKey(5) & 0xFF
        if k == 27:
            break
    cv2.destroyAllWindows()
